using RacingEventManagement.Models;
using RacingEventManagement.Repos;

namespace RacingEventManagement.Service
{
    public class RaceService
    {
        private static RaceRepo _repo;
        public RaceService(RaceRepo raceRepo) {
            _repo = raceRepo;
        }

        public void AddARace()
        {
            var race1 = new Race()
            {
                Date = DateTime.Now,
                Distance = 10,
                Location = "Belgium",
                Name = "Grand Prix Francorchamps",
                RaceId = 1,
            };

            _repo.AddRace(race1);
        }

        public void CreateRacesWithAutoGeneratedIds()
        {
            var race1 = new Race()
            {
                Date = DateTime.Now,
                Distance = 10,
                Location = "Belgium",
                Name = "Grand Prix Francorchamps",
            };

            var race2 = new Race()
            {
                Date = DateTime.Now,
                Distance = 20,
                Location = "United Arab Emirates",
                Name = "Abu Dhabi Grand Prix",
            };

            var race3 = new Race()
            {
                Date = DateTime.Now,
                Distance = 25,
                Location = "United Kingdom",
                Name = "British Grand Prix",
            };

            _repo.AddRace(race1);
            _repo.AddRace(race2);
            _repo.AddRace(race3);
            Console.WriteLine("Added 3 races");
        }

        public void GetAllRaces() {
            var races =  _repo.GetAllRaces();
            string result = string.Join(Environment.NewLine, races.Select(p => $"Name: {p.Name}, Location: {p.Location}"));
            Console.WriteLine(result);
        }

        public void PerformingDifferentUpdates()
        {
            Console.WriteLine("\n\n\n\nTryUpdateHardCodedExistingRace");
            _repo.TryUpdateHardCodedExistingRace();

            Console.WriteLine("\n\n\n\nUpdateRaceUsingFind");
            _repo.UpdateRaceUsingFind();

            Console.WriteLine("\n\n\n\nUpdateRaceUsingUpdate");
            _repo.UpdateRaceUsingUpdate();

            Console.WriteLine("\n\n\n\nUpdateRaceUsingFindAndModifyObejctOutsideContextScope");
            _repo.UpdateRaceUsingFindAndModifyObejctOutsideContextScope();
        }
    }
}
